Git是世界上最先进的分布式版本控制系统
----------------------------------------------------------------------------
集中式版本控制系统：版本库是集中存放在中央服务器，自己的电脑从中央服务器下载。
分布式版本控制系统：没有"中央服务器"，每个人的电脑上都是一个完整的版本库，git 不是必须联网，也有一个电脑充当"中央服务器"的角色。
===========================================================================

Git 命令：
1、添加到暂存区               git add <file>
2、添加说明、提交到工作区     git commit -m <message>
3、查看仓库当前状态           git status
4、查看具体修改的内容         git diff
5、查看提交历史               git log --pretty=oneline 
6、将版本回腿到上一个版本     git reset --hard HEAD^
7、查看命令历史（方便回退）   git reflog
8、撤销文件区的操作           git checkout --<file>
9、撤销暂存区的操作           git reset HEAD <file>
10、从暂存区删除              git rm <file>
11、暂存区版本替换工作区版本  git checkout <file>
12、从本地库提交到远程库      git push origin maste
13、删除远程库                git remote rm origin
14、创建远程库                git remote add origin git@github.com:huwweiyouxiangonsi/learngit.git
15、将本地文件提交到远程库    git push  origin master
16、把这个目录变成Git可以管理的仓库       git init
--------------------------------------------------------------
17、克隆一个本地库            git clone git@github.com:huwweiyouxiangonsi/gitskill.git
18、创建+ 切换分支            git checkout -b <name>
19、查看有几个分支            git branch 
20、删除分支                  git branch -d dev
21、合并分支                  git merge dev
22、切换分支                  git checkout <name>
23、创建分支                  git branch <name>
24、查看分支合并图            git log --graph
当分支发生冲突的时候，无法自动合并，需要自己手动编辑内容合并
看分支图的详细命令: git log --graph --pretty=oneline --abbrev-commit  
25、合并分支时加上 --no-ff 就可以用普通模式合并，
    没有合并历史，fast forward 没有合并历史
26、公司开发的时候，主分支不公作，只是用来发布版本,dev 相当与工作主干，大家有各自的分支，在dev上下载代码，最后提交到dev上
-------------------------------------------------------------
27、保存工作现场的信息        git stash
28、查看保存的现场            git stash list
29、恢复现存场                git stash apply
30、删除现场保存信息          git stash drop 
31、恢复现场，并且删除信息    git stash pop
32、强行删除分支              git branch -D <name>
--------------------------------------------------------------
33、查看远程库的信息          git remote
33、显示更详细的信息          git remote -v
34、抓取远程库最新的提交      git pull
	pull失败:将分支和远程库对应分支连接
	git branch --set-upstream-to=origin/dev dev
35、将本地未push的分叉历史信息合并成直线    git rebase
rebase 可以使我们在查看历史提交的变化时更容易
------------------------------------------------------------
36、创建标签（默认最新的commit）        git tag <name>
37、查看所有标签                        git tag
38、按版本号打标签           	        git tag v0.9 f56676543
39、创建带有说明的标签                  git tag -a v0.1 -m "说明文字" a12a
40、可以看到标签的说明文字              git show<tagname>
41、删除标签                            git tag -d v0.1
42、推送某个标签到远程                  git push origin<tagname>
    一次性推送所有尚未推送的标签        git push origin --tags
43、从远端删除     1 删本地  2 删远端   git push origin :refs/tags/v0.9


